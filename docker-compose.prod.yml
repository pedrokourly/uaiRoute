version: '3.8'

# Docker Compose para PRODUÇÃO
# Use este arquivo para deploy em produção

services:
  # Backend Django
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: uairoute-backend-prod
    ports:
      - "8000:8000"
    volumes:
      - ./data/db.sqlite3:/app/db.sqlite3
      - backend_data:/app/data
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,seu-dominio.com
    networks:
      - uairoute-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Flask  
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: uairoute-frontend-prod
    ports:
      - "5000:5000"
    environment:
      - SERVER_IP=seu-dominio.com
      - DEBUG=False
      - BACKEND_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - uairoute-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx para proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: uairoute-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs  # Para certificados SSL
    depends_on:
      - frontend
      - backend
    networks:
      - uairoute-network
    restart: always

volumes:
  backend_data:

networks:
  uairoute-network:
    driver: bridge
